version: "3.9"

services:
    es:
        image: elasticsearch:7.17.9
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ports:
            - "9200:9200"
        networks:
            - app-network
    mysql:
        build:
            context: .
            dockerfile: ./docker/local/mysql/Dockerfile
        volumes:
            - local_mysql_data:/var/lib/mysql
        env_file:
            - ./.envs/.local/.mysql
        ports:
            - "3307:3306"
        networks:
            - app-network
    webapp:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start
        ports:
            - "8000:8000"
        volumes:
            - .:/app:z
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        expose:
            - "8000"
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.mysql
        depends_on:
            - mysql
            - es
        networks:
            - app-network
    
    redis:
        image: redis:7-alpine
        networks:
            - app-network

    celery_worker:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-celeryworker
        volumes:
            - .:/app
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.mysql
        depends_on:
            - redis
            - mysql
        networks:
            - app-network

    nginx:
        restart: always
        depends_on:
            - webapp
        volumes:
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        build:
            context: ./docker/local/nginx
            dockerfile: Dockerfile
        ports:
            - "80:80"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    static_volume:
    media_volume:
    local_mysql_data: {}