#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

working_dir="$(dirname ${0})"

source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"

if [[ -z ${1+x} ]]; then
  message_error "Backup filename is not specified yet it is a required parameter. Make sure you provide one and try again."
  exit 1
fi

backup_filename="${BACKUP_DIR_PATH}/${1}"

if [[ ! -f "${backup_filename}" ]]; then
  message_error "No backup with the specified backup filename was found. Check out the 'backups' maintenance script output to see if there is one and try again."
  exit 1
fi

message_welcome "Restoring the '${MYSQL_DATABASE}' database from the '${backup_filename}' backup..."

if [[ "${MYSQL_USER}" == "root" ]]; then
  message_error "Restoring as 'root' user is not allowed. Assign 'MYSQL_USER' env with another one and try again."
  exit 1
fi

export MYSQL_PWD="${MYSQL_PASSWORD}"

message_info "Dropping the database..."

mysql -h"${MYSQL_HOST}" -P"${MYSQL_PORT}" -u"${MYSQL_USER}" -e "DROP DATABASE IF EXISTS \`${MYSQL_DATABASE}\`;"

message_info "Creating a new database..."

mysql -h"${MYSQL_HOST}" -P"${MYSQL_PORT}" -u"${MYSQL_USER}" -e "CREATE DATABASE \`${MYSQL_DATABASE}\`;"

message_info "Applying the backup to the new database..."

gunzip -c "${backup_filename}" | mysql -h"${MYSQL_HOST}" -P"${MYSQL_PORT}" -u"${MYSQL_USER}" "${MYSQL_DATABASE}"

message_success "The '${MYSQL_DATABASE}' database has been restored successfully from the '${backup_filename}' backup"